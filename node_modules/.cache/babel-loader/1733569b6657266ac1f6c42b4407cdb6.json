{"ast":null,"code":"var _jsxFileName = \"/home/nils/programing/swimcalc/src/kvaltider/kvaltider.jsx\",\n    _s = $RefreshSig$();\n\nimport { store } from \"..\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useKvaltider = () => {\n  _s();\n\n  const [update, setUpdate] = useState(false);\n  store.subscribe(() => setUpdate(!update));\n  const [competitionList, setCompetitionList] = useState();\n  const [list, setlist] = useState(null);\n  const [pool, setPool] = useState(\"25\");\n  useEffect(async () => {\n    await axios.post(\"/competitions\").then(res => {\n      store.dispatch({\n        type: \"COMPETITIONS\",\n        payload: res.data\n      });\n    });\n    let returnList = [];\n    Object.keys(store.getState().competitions).forEach(key => {\n      const option = /*#__PURE__*/_jsxDEV(\"option\", {\n        value: key,\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n\n      returnList.push(option);\n    });\n    setCompetitionList(returnList);\n  }, []);\n\n  const checkAge = age => {\n    const date = new Date();\n    const userAge = parseInt(date.getFullYear()) - parseInt(store.getState().user.info.age);\n\n    if (userAge <= age) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const checkQ = (qtime, ytime) => {\n    if (qtime > ytime) return true;\n    return false;\n  };\n\n  useEffect(() => {\n    var _store$getState, _store$getState$compe, _store$getState2, _store$getState2$user, _store$getState3, _store$getState3$user, _store$getState3$user2;\n\n    //console.log(\"store.getState()?.user?.data: \", store.getState()?.user?.data)\n    if (((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$compe = _store$getState.competitions) === null || _store$getState$compe === void 0 ? void 0 : _store$getState$compe.sumsim) !== undefined && ((_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$user = _store$getState2.user) === null || _store$getState2$user === void 0 ? void 0 : _store$getState2$user.data) !== undefined && ((_store$getState3 = store.getState()) === null || _store$getState3 === void 0 ? void 0 : (_store$getState3$user = _store$getState3.user) === null || _store$getState3$user === void 0 ? void 0 : (_store$getState3$user2 = _store$getState3$user.info) === null || _store$getState3$user2 === void 0 ? void 0 : _store$getState3$user2.gender) !== undefined) {\n      let returnArr = [];\n      let ageGroupFound = false;\n      let duplicateCheck = [];\n      Object.keys(store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool]).forEach(age => {\n        // to age\n        if (!checkAge(age)) {\n          return;\n        }\n\n        Object.keys(store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool][age]).forEach(style => {\n          // to style\n          ageGroupFound = true;\n          Object.keys(store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool][age][style]).forEach(distance => {\n            var _store$getState$user$, _store$getState$user$2, _store$getState$user$3, _store$getState$user$4;\n\n            // to distance\n            //console.log(\"Time: \", store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool][age][style][distance], \"Style: \", style, \"Distance: \", distance)\n            //console.log(\"USERDATA: \", store.getState().user.data?.[pool]?.[style]?.[distance]?.time)\n            let isDuplicate = false;\n            duplicateCheck.forEach(element => {\n              if (element === distance + style) isDuplicate = true;\n            });\n            duplicateCheck.push(distance + style);\n            if (isDuplicate) return;\n\n            if (((_store$getState$user$ = store.getState().user.data) === null || _store$getState$user$ === void 0 ? void 0 : (_store$getState$user$2 = _store$getState$user$[pool]) === null || _store$getState$user$2 === void 0 ? void 0 : (_store$getState$user$3 = _store$getState$user$2[style]) === null || _store$getState$user$3 === void 0 ? void 0 : (_store$getState$user$4 = _store$getState$user$3[distance]) === null || _store$getState$user$4 === void 0 ? void 0 : _store$getState$user$4.time) !== undefined) {\n              // making sure the swimmer has a valid time \n              let addClass = \"not_qualified\";\n              let Qmessage = \"NOT QUALIFIED\";\n\n              if (checkQ(store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool][age][style][distance], store.getState().user.data[pool][style][distance].time)) {\n                addClass = \"qualified\";\n                Qmessage = \"QUALIFIED\";\n              }\n\n              const div = /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"listDiv \" + addClass,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"distanceDiv\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: distance\n                  }, _.uniqueId(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: style.toUpperCase()\n                  }, _.uniqueId(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 41\n                  }, this)]\n                }, _.uniqueId(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Qmessage\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: Qmessage\n                  }, _.uniqueId(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 41\n                  }, this)\n                }, _.uniqueId(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"QtimeDiv\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Q-Time\"\n                  }, _.uniqueId(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool][age][style][distance]\n                  }, _.uniqueId(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 41\n                  }, this)]\n                }, _.uniqueId(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"YtimeDiv\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Your-Time\"\n                  }, _.uniqueId(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: store.getState().user.data[pool][style][distance].time\n                  }, _.uniqueId(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this)]\n                }, _.uniqueId(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this)]\n              }, _.uniqueId(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this);\n\n              returnArr.push(div);\n            }\n          });\n        });\n      });\n\n      if (!ageGroupFound) {\n        console.log(\"NO AGE FOUND\");\n        return setlist( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toOldDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"TO OLD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this));\n      }\n\n      setlist(returnArr);\n    } else {\n      setlist(null);\n    }\n  }, [competitionList, update, pool]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kvaltiderMainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectCompetition\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"COMPETITION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"competition\",\n        id: \"competition\",\n        children: competitionList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectPool\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"POOL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setPool(e.target.value),\n        name: \"pool\",\n        id: \"pool\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"25\",\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kvalList\",\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(useKvaltider, \"1sWKh/9qTI4U03EUhSdAo152An4=\");\n\nexport default useKvaltider;","map":{"version":3,"sources":["/home/nils/programing/swimcalc/src/kvaltider/kvaltider.jsx"],"names":["store","axios","useState","useEffect","_","useKvaltider","update","setUpdate","subscribe","competitionList","setCompetitionList","list","setlist","pool","setPool","post","then","res","dispatch","type","payload","data","returnList","Object","keys","getState","competitions","forEach","key","option","push","checkAge","age","date","Date","userAge","parseInt","getFullYear","user","info","checkQ","qtime","ytime","sumsim","undefined","gender","returnArr","ageGroupFound","duplicateCheck","toLowerCase","style","distance","isDuplicate","element","time","addClass","Qmessage","div","uniqueId","toUpperCase","console","log","e","target","value"],"mappings":"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","sourcesContent":["import { store } from \"..\"\nimport axios from \"axios\"\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport _ from \"lodash\"\n\n\nconst useKvaltider = () => {\n\n    const [update, setUpdate] = useState(false)\n    store.subscribe(() => setUpdate(!update))\n\n    const [competitionList, setCompetitionList] = useState()\n    const [list, setlist] = useState(null)\n\n    const [pool, setPool] = useState(\"25\")\n\n    useEffect(async () => {\n        await axios.post(\"/competitions\")\n            .then((res) => {\n                store.dispatch({\n                    type: \"COMPETITIONS\",\n                    payload: res.data\n                })\n            })\n\n\n        let returnList = []\n        Object.keys(store.getState().competitions).forEach(key => {\n            const option = (\n                <option value={key}>{key}</option>\n            )\n            returnList.push(option)\n        });\n        setCompetitionList(returnList)\n    }, [])\n\n    const checkAge = (age) => {\n\n        const date = new Date()\n        const userAge = parseInt(date.getFullYear()) - parseInt(store.getState().user.info.age)\n\n        if (userAge <= age) {\n            return true\n        }\n        return false\n    }\n\n    const checkQ = (qtime, ytime) => {\n        if (qtime > ytime) return true\n        return false\n    }\n\n    useEffect(() => {\n        //console.log(\"store.getState()?.user?.data: \", store.getState()?.user?.data)\n        if (store.getState()?.competitions?.sumsim !== undefined && store.getState()?.user?.data !== undefined && store.getState()?.user?.info?.gender !== undefined) {\n            let returnArr = []\n            let ageGroupFound = false\n            let duplicateCheck = []\n            Object.keys(store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool]).forEach(age => { // to age\n                if (!checkAge(age)) {\n                    return\n                }\n                Object.keys(store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool][age]).forEach(style => { // to style\n                    ageGroupFound = true\n                    Object.keys(store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool][age][style]).forEach(distance => { // to distance\n                        //console.log(\"Time: \", store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool][age][style][distance], \"Style: \", style, \"Distance: \", distance)\n                        //console.log(\"USERDATA: \", store.getState().user.data?.[pool]?.[style]?.[distance]?.time)\n\n                        let isDuplicate = false\n                        duplicateCheck.forEach(element => {\n                            if (element === distance + style) isDuplicate = true\n                        })\n                        duplicateCheck.push(distance + style)\n                        if (isDuplicate) return\n\n                        if (store.getState().user.data?.[pool]?.[style]?.[distance]?.time !== undefined) { // making sure the swimmer has a valid time \n                            let addClass = \"not_qualified\"\n                            let Qmessage = \"NOT QUALIFIED\"\n                            if (checkQ(store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool][age][style][distance], store.getState().user.data[pool][style][distance].time)) {\n                                addClass = \"qualified\"\n                                Qmessage = \"QUALIFIED\"\n                            }\n\n                            const div = (\n                                <div key={_.uniqueId()} className={\"listDiv \" + addClass}>\n                                    <div key={_.uniqueId()} className=\"distanceDiv\">\n                                        <span key={_.uniqueId()}>{distance}</span>\n                                        <span key={_.uniqueId()}>{style.toUpperCase()}</span>\n                                    </div>\n                                    <div key={_.uniqueId()} className=\"Qmessage\">\n                                        <span key={_.uniqueId()} >{Qmessage}</span>\n                                    </div>\n                                    <div key={_.uniqueId()} className=\"QtimeDiv\">\n                                        <span key={_.uniqueId()}>Q-Time</span>\n                                        <span key={_.uniqueId()}>{store.getState().competitions.sumsim[store.getState().user.info.gender.toLowerCase()][pool][age][style][distance]}</span>\n                                    </div>\n                                    <div key={_.uniqueId()} className=\"YtimeDiv\">\n                                        <span key={_.uniqueId()}>Your-Time</span>\n                                        <span key={_.uniqueId()}>{store.getState().user.data[pool][style][distance].time}</span>\n                                    </div>\n                                </div>\n                            )\n                            returnArr.push(div)\n                        }\n                    })\n                })\n            })\n            if (!ageGroupFound) {\n                console.log(\"NO AGE FOUND\")\n                return setlist(\n                    <div className=\"toOldDiv\">\n                        <span>TO OLD</span>\n                    </div>\n                )\n            }\n            setlist(returnArr)\n        } else {\n            setlist(null)\n        }\n    }, [competitionList, update, pool])\n\n\n    return (\n        <div className=\"kvaltiderMainDiv\">\n            <div className=\"selectCompetition\">\n                <span>COMPETITION</span>\n                <select name=\"competition\" id=\"competition\">\n                    {competitionList}\n                </select>\n            </div>\n            <div className=\"selectPool\">\n                <span>POOL</span>\n                <select onChange={(e) => setPool(e.target.value)} name=\"pool\" id=\"pool\">\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n            <div className=\"kvalList\">\n                {list}\n            </div>\n        </div>\n    )\n}\n\nexport default useKvaltider"]},"metadata":{},"sourceType":"module"}