{"ast":null,"code":"var _jsxFileName = \"/home/nils/programing/swimcalc/src/relay/relay.jsx\",\n    _s = $RefreshSig$();\n\nimport { store } from \"..\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User_login = _ref => {\n  let {\n    setPage\n  } = _ref;\n\n  const getPage = async (name, sur_name) => {\n    await axios.post(\"/tempus/find\", {\n      name,\n      sur_name\n    }).then(res => {\n      store.dispatch({\n        type: \"USER_SEARCH_FIELDS\",\n        payload: res.data\n      });\n    });\n  };\n\n  const selectUser = async index => {\n    await store.dispatch({\n      //adding user gender\n      type: \"RELAY_USER_INFO\",\n      payload: {\n        gender: store.getState().user.searchField[index].gender,\n        name: store.getState().user.searchField[index].name,\n        sur_name: store.getState().user.searchField[index].sur_name,\n        age: store.getState().user.searchField[index].age,\n        status: store.getState().user.searchField[index].status\n      }\n    });\n    axios.post(\"/tempus/selectUser\", {\n      id: store.getState().user.searchField[index].id\n    }).then(res => {\n      console.log(\"CHANGING USER DATA\");\n      console.log(res.data);\n      store.dispatch({\n        type: \"RELAY_USER_DATA\",\n        payload: res.data\n      }); // add session storage\n\n      localStorage.setItem(\"relay\", JSON.stringify(store.getState().relay));\n    });\n    setPage(\"main\");\n  };\n\n  const inputHandler = e => {\n    e.preventDefault();\n\n    if (e.target.name.value === \"\") {\n      getPage(\"nils\", \"malmberg\");\n      return;\n    }\n\n    getPage(e.target.name.value, e.target.surName.value);\n  };\n\n  const displayList = () => {\n    var _store$getState, _store$getState$user;\n\n    let retrunArr = [];\n    if (((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$user = _store$getState.user) === null || _store$getState$user === void 0 ? void 0 : _store$getState$user.searchField) === undefined) return;\n    store.getState().user.searchField.forEach((element, index) => {\n      const e = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listEDefault\",\n        onClick: () => selectUser(index),\n        style: {\n          gridRow: `${index + 1}/${index + 2}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nameDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.name + \" \" + element.sur_name\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, _.uniqueId(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ageDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.age\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, _.uniqueId(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genderDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.gender\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, _.uniqueId(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"organization\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.organization\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, _.uniqueId(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, _.uniqueId(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n\n      retrunArr.push(e);\n    });\n    return retrunArr;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landingPageMainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add user to relay pool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleLine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputMainDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"inputContainer\",\n        onSubmit: inputHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDefault nameContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDefault surNameContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"surName\",\n            id: \"surName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDefault OrganizationContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Organization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"organization\",\n            id: \"organization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputButton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Go!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userListMainDiv\",\n      children: [store.getState() ? displayList() : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extraSpace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_c = User_login;\n\nconst useRelay = () => {\n  _s();\n\n  // get course, distance\n  // get info from swimmer\n  // create page to login multiple swimmers\n  // send loged in swimmers to a favorites list and save to cookies\n  // calc every outcome from pool of swimmers\n  // choose the amount of teams generated\n  // generate and display teams\n  // profit\n  const [update, setUpdate] = useState(false);\n  store.subscribe(() => setUpdate(!update));\n  const [page, setPage] = useState(\"main\");\n  const [pool, setPool] = useState(\"25\");\n  const [distance, setDistance] = useState(200);\n  const [stroke, setStroke] = useState(\"fr\");\n  const distance_list = [\"4x200 free\", \"4x100 free\", \"4x50 free\", \"4x100 medley\", \"4x50 medley\"];\n\n  const remove_user_from_pool = index => {\n    let data = store.getState().relay.data;\n    let info = store.getState().relay.info;\n    data.splice(index, 1);\n    info.splice(index, 1);\n    store.dispatch({\n      //adding user gender\n      type: \"RELAY_REMOVE_USER\",\n      payload: {\n        data: data,\n        info: info\n      }\n    }); // update session storage\n\n    localStorage.setItem(\"relay\", JSON.stringify(store.getState().relay));\n  };\n\n  const displayList = () => {\n    var _store$getState2, _store$getState2$rela;\n\n    let retrunArr = [];\n    if (((_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$rela = _store$getState2.relay) === null || _store$getState2$rela === void 0 ? void 0 : _store$getState2$rela.info) === undefined) return;\n    store.getState().relay.info.forEach((element, index) => {\n      const e = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listEDefault\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info_pool\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nameDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.name + \" \" + element.sur_name\n            }, _.uniqueId(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ageDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.age\n            }, _.uniqueId(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"organization\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.organization\n            }, _.uniqueId(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            remove_user_from_pool(index);\n          },\n          children: \"Remove\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, _.uniqueId(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this);\n\n      retrunArr.push(e);\n    });\n    return retrunArr;\n  };\n\n  const calc_teams = () => {\n    var _store$getState3, _store$getState3$rela, _store$getState3$rela2, _store$getState4, _store$getState4$rela, _store$getState4$rela2;\n\n    console.log(\"pool: \", pool);\n    console.log(\"distance: \", distance);\n    console.log(\"stroke: \", stroke);\n    if (((_store$getState3 = store.getState()) === null || _store$getState3 === void 0 ? void 0 : (_store$getState3$rela = _store$getState3.relay) === null || _store$getState3$rela === void 0 ? void 0 : (_store$getState3$rela2 = _store$getState3$rela.info[0]) === null || _store$getState3$rela2 === void 0 ? void 0 : _store$getState3$rela2.name) === undefined) return;\n\n    if (((_store$getState4 = store.getState()) === null || _store$getState4 === void 0 ? void 0 : (_store$getState4$rela = _store$getState4.relay) === null || _store$getState4$rela === void 0 ? void 0 : (_store$getState4$rela2 = _store$getState4$rela.data) === null || _store$getState4$rela2 === void 0 ? void 0 : _store$getState4$rela2.length) < 4) {\n      console.log(\"Not enough swimmers for a team\");\n      return;\n    }\n\n    store.getState().relay.data.forEach((elm, index) => {\n      const info = store.getState().relay.info[index];\n      console.log(\"Name: \", info.name);\n      console.log(\"Time: \", elm[pool][stroke][distance].time);\n      let time = elm[pool][stroke][distance].time;\n      var d = new Date();\n      d.setMinutes(parseInt(time.split(\":\").splice(0)) || 0);\n      d.setSeconds(parseInt(time.split(\":\").splice(1)) || 0);\n      d.setMilliseconds(parseInt(time.split(\":\").splice(2)) || 0);\n      console.log(Date.parse(d));\n    });\n  };\n\n  const main_page = () => {\n    var _store$getState5, _store$getState5$rela, _store$getState5$rela2;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relayMainBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"COURSE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setPool(e.target.value),\n            name: \"course\",\n            id: \"course\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"25\",\n              children: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distance\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"DISTANCE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setDistance(e.target.value),\n            name: \"distance\",\n            id: \"distance\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"25\",\n              children: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"100\",\n              children: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"200\",\n              children: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stroke\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"STROKE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setStroke(e.target.value),\n            name: \"stroke\",\n            id: \"stroke\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fr\",\n              children: \"fr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"br\",\n              children: \"br\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ry\",\n              children: \"ry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fj\",\n              children: \"fj\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swimmer_pool\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pool_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Swimmer pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setPage(\"user_login\");\n            },\n            children: \"Add +\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), (_store$getState5 = store.getState()) !== null && _store$getState5 !== void 0 && (_store$getState5$rela = _store$getState5.relay) !== null && _store$getState5$rela !== void 0 && (_store$getState5$rela2 = _store$getState5$rela.info[0]) !== null && _store$getState5$rela2 !== void 0 && _store$getState5$rela2.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swimmer_pool_list\",\n          children: store.getState() ? displayList() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              calc_teams();\n            },\n            children: \"Go!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"teams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this);\n  };\n\n  const show_page = () => {\n    switch (page) {\n      case \"main\":\n        return main_page();\n\n      case \"user_login\":\n        return /*#__PURE__*/_jsxDEV(User_login, {\n          setPage: setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  return show_page();\n};\n\n_s(useRelay, \"xeSJmcao6X5/aAMD/zWHyijqPEw=\");\n\nexport default useRelay;\n\nvar _c;\n\n$RefreshReg$(_c, \"User_login\");","map":{"version":3,"sources":["/home/nils/programing/swimcalc/src/relay/relay.jsx"],"names":["store","axios","useState","useEffect","_","User_login","setPage","getPage","name","sur_name","post","then","res","dispatch","type","payload","data","selectUser","index","gender","getState","user","searchField","age","status","id","console","log","localStorage","setItem","JSON","stringify","relay","inputHandler","e","preventDefault","target","value","surName","displayList","retrunArr","undefined","forEach","element","gridRow","uniqueId","organization","push","useRelay","update","setUpdate","subscribe","page","pool","setPool","distance","setDistance","stroke","setStroke","distance_list","remove_user_from_pool","info","splice","calc_teams","length","elm","time","d","Date","setMinutes","parseInt","split","setSeconds","setMilliseconds","parse","main_page","show_page"],"mappings":"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","sourcesContent":["import { store } from \"..\"\nimport axios from \"axios\"\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport _ from \"lodash\"\n\nconst User_login = ({setPage})=>{\n\n    const getPage = async (name, sur_name) => {\n        await axios.post(\"/tempus/find\", {\n            name,\n            sur_name\n        })\n            .then(res => {\n                store.dispatch({\n                    type: \"USER_SEARCH_FIELDS\",\n                    payload: res.data\n                })\n            })\n    }\n\n    const selectUser = async (index) => {\n\n        await store.dispatch({ //adding user gender\n            type: \"RELAY_USER_INFO\",\n            payload: {\n                gender: store.getState().user.searchField[index].gender,\n                name: store.getState().user.searchField[index].name,\n                sur_name: store.getState().user.searchField[index].sur_name,\n                age: store.getState().user.searchField[index].age,\n                status: store.getState().user.searchField[index].status\n            }\n        })\n\n        axios.post(\"/tempus/selectUser\", {\n            id: store.getState().user.searchField[index].id\n        })\n            .then(res => {\n                console.log(\"CHANGING USER DATA\")\n                console.log(res.data)\n                store.dispatch({\n                    type: \"RELAY_USER_DATA\",\n                    payload: res.data\n                })\n                // add session storage\n                localStorage.setItem(\"relay\", JSON.stringify(store.getState().relay))\n            })\n        \n\n        setPage(\"main\")\n    }\n\n    const inputHandler = (e) => {\n        e.preventDefault()\n        if (e.target.name.value === \"\") {\n            getPage(\"nils\", \"malmberg\")\n            return\n        }\n        getPage(e.target.name.value, e.target.surName.value)\n    }\n\n    const displayList = () => {\n        let retrunArr = []\n        if (store.getState()?.user?.searchField === undefined) return\n        store.getState().user.searchField.forEach((element, index) => {\n            const e = (\n                <div key={_.uniqueId()} className=\"listEDefault\" onClick={() => selectUser(index)} style={{ gridRow: `${index + 1}/${index + 2}` }}>\n                    <div key={_.uniqueId()} className=\"nameDiv\">\n                        <span key={_.uniqueId()}>{element.name + \" \" + element.sur_name}</span>\n                    </div>\n                    <div key={_.uniqueId()} className=\"ageDiv\">\n                        <span key={_.uniqueId()}>{element.age}</span>\n                    </div>\n                    <div key={_.uniqueId()} className=\"genderDiv\">\n                        <span key={_.uniqueId()}>{element.gender}</span>\n                    </div>\n                    <div key={_.uniqueId()} className=\"organization\">\n                        <span key={_.uniqueId()}>{element.organization}</span>\n                    </div>\n                </div>\n            )\n            retrunArr.push(e)\n        });\n        return retrunArr\n    }\n\n\n    return (\n        <div className=\"landingPageMainDiv\">\n            <div className=\"titleDiv\">\n                {/* <span onClick={() => getPage()}>Enter your name to login</span>\n                <span onClick={() => selectUser(\"AI3504\")}>CLICK ME!</span> */}\n                {/* <span onClick={()=> selectUser(\"AI6711\")}>CLICK ME!</span> */}\n                <span>Add user to relay pool</span>\n                <div className=\"titleLine\" />\n            </div>\n            <div className=\"inputMainDiv\">\n                <form className=\"inputContainer\" onSubmit={inputHandler}>\n                    <div className=\"inputDefault nameContainer\">\n                        <span>Name</span>\n                        <input type=\"text\" name=\"name\" id=\"name\" />\n                    </div>\n                    <div className=\"inputDefault surNameContainer\">\n                        <span>Surname</span>\n                        <input type=\"text\" name=\"surName\" id=\"surName\" />\n                    </div>\n                    <div className=\"inputDefault OrganizationContainer\">\n                        <span>Organization</span>\n                        <input type=\"text\" name=\"organization\" id=\"organization\" />\n                    </div>\n                    <div className=\"inputButton\">\n                        <button type=\"submit\">Go!</button>\n                    </div>\n                </form>\n            </div>\n            <div className=\"userListMainDiv\">\n                {store.getState() ?\n                    displayList() :\n                    null\n                }\n                <div className=\"extraSpace\" />\n            </div>\n        </div>\n    )\n}\n\nconst useRelay = ()=>{\n\n    // get course, distance\n\n    // get info from swimmer\n\n        // create page to login multiple swimmers\n        // send loged in swimmers to a favorites list and save to cookies\n\n    // calc every outcome from pool of swimmers\n    \n    // choose the amount of teams generated\n\n    // generate and display teams\n\n    // profit\n\n    const [update, setUpdate] = useState(false)\n    store.subscribe(() => setUpdate(!update))\n\n    const [page, setPage] = useState(\"main\")\n    const [pool, setPool] = useState(\"25\")\n    const [distance, setDistance] = useState(200)\n    const [stroke, setStroke] = useState(\"fr\")\n\n    const distance_list = [\n        \"4x200 free\",\n        \"4x100 free\",\n        \"4x50 free\",\n        \"4x100 medley\",\n        \"4x50 medley\",\n    ]\n\n    const remove_user_from_pool= (index)=>{\n        \n        let data = store.getState().relay.data\n        let info = store.getState().relay.info\n\n        data.splice(index, 1)\n        info.splice(index, 1)\n\n        store.dispatch({ //adding user gender\n            type: \"RELAY_REMOVE_USER\",\n            payload: {\n                data: data,\n                info: info\n            }\n        })\n        // update session storage\n        localStorage.setItem(\"relay\", JSON.stringify(store.getState().relay))\n    }\n\n    const displayList = () => {\n        let retrunArr = []\n        if (store.getState()?.relay?.info === undefined) return\n        store.getState().relay.info.forEach((element, index) => {\n            const e = (\n                <div key={_.uniqueId()} className=\"listEDefault\">\n                    <div className=\"info_pool\">\n                        <div key={_.uniqueId()} className=\"nameDiv\">\n                            <span key={_.uniqueId()}>{element.name + \" \" + element.sur_name}</span>\n                        </div>\n                        <div key={_.uniqueId()} className=\"ageDiv\">\n                            <span key={_.uniqueId()}>{element.age}</span>\n                        </div>\n                        <div key={_.uniqueId()} className=\"organization\">\n                            <span key={_.uniqueId()}>{element.organization}</span>\n                        </div>\n                    </div>\n                    <button key={index} onClick={()=>{remove_user_from_pool(index)}}>Remove</button>\n                </div>\n            )\n            retrunArr.push(e)\n        });\n        return retrunArr\n    }\n\n    const calc_teams = ()=>{\n\n        console.log(\"pool: \", pool)\n        console.log(\"distance: \", distance)\n        console.log(\"stroke: \", stroke)\n\n\n        if (store.getState()?.relay?.info[0]?.name === undefined) return \n\n        if (store.getState()?.relay?.data?.length < 4){\n            console.log(\"Not enough swimmers for a team\")\n            return\n        }\n\n        store.getState().relay.data.forEach((elm, index) =>{\n            const info = store.getState().relay.info[index]\n            console.log(\"Name: \", info.name)\n            console.log(\"Time: \", elm[pool][stroke][distance].time)\n\n            let time = elm[pool][stroke][distance].time\n\n            var d = new Date();\n            d.setMinutes( parseInt( time.split(\":\").splice(0)) || 0 );\n            d.setSeconds( parseInt( time.split(\":\").splice(1)) || 0 );\n            d.setMilliseconds( parseInt( time.split(\":\").splice(2)) || 0 );\n            \n            console.log(Date.parse(d))\n\n        })\n\n\n    }\n\n    const main_page = ()=>{\n        return (\n            <div className=\"relayMainBody\">\n                <div className=\"info\">\n                    <div className=\"course\">\n                        <span>COURSE:</span>\n                        <select onChange={(e) => setPool(e.target.value)} name=\"course\" id=\"course\">\n                            <option value=\"25\">25</option>\n                            <option value=\"50\">50</option>\n                        </select>\n                    </div>\n                    <div className=\"distance\">\n                        <span>DISTANCE</span>\n                        <select onChange={(e) => setDistance(e.target.value)} name=\"distance\" id=\"distance\">\n                            <option value=\"25\">25</option>\n                            <option value=\"50\">50</option>\n                            <option value=\"100\">100</option>\n                            <option value=\"200\">200</option>\n                        </select>\n                    </div>\n                    <div className=\"stroke\">\n                        <span>STROKE</span>\n                        <select onChange={(e) => setStroke(e.target.value)} name=\"stroke\" id=\"stroke\">\n                            <option value=\"fr\">fr</option>\n                            <option value=\"br\">br</option>\n                            <option value=\"ry\">ry</option>\n                            <option value=\"fj\">fj</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"swimmer_pool\">\n                    <div className=\"pool_info\">\n                        <span>Swimmer pool</span>\n                        <button onClick={()=>{setPage(\"user_login\")}}>Add +</button>\n                    </div>\n                    {\n                        store.getState()?.relay?.info[0]?.name ? \n                        <div className=\"swimmer_pool_list\">\n                            {store.getState() ?\n                                displayList() :\n                                null\n                            }\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"result_div\">\n                    <div className=\"menu\">\n                        <button onClick={()=>{calc_teams()}}>Go!</button>\n                    </div>\n                    <div className=\"teams\">\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    const show_page = ()=>{\n        switch(page){\n            case \"main\":\n                return main_page()\n            case \"user_login\":\n                return <User_login setPage={setPage}/>\n        }\n    }\n\n\n    return show_page()\n\n} \n\nexport default useRelay"]},"metadata":{},"sourceType":"module"}