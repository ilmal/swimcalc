{"ast":null,"code":"var _jsxFileName = \"/home/nils/programing/swimcalc/src/relay/relay.jsx\",\n    _s = $RefreshSig$();\n\nimport { store } from \"..\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst User_login = _ref => {\n  let {\n    setPage\n  } = _ref;\n\n  const getPage = async (name, sur_name) => {\n    await axios.post(\"/tempus/find\", {\n      name,\n      sur_name\n    }).then(res => {\n      store.dispatch({\n        type: \"USER_SEARCH_FIELDS\",\n        payload: res.data\n      });\n    });\n  };\n\n  const selectUser = async index => {\n    await store.dispatch({\n      //adding user gender\n      type: \"RELAY_USER_INFO\",\n      payload: {\n        gender: store.getState().user.searchField[index].gender,\n        name: store.getState().user.searchField[index].name,\n        sur_name: store.getState().user.searchField[index].sur_name,\n        age: store.getState().user.searchField[index].age,\n        status: store.getState().user.searchField[index].status\n      }\n    });\n    axios.post(\"/tempus/selectUser\", {\n      id: store.getState().user.searchField[index].id\n    }).then(res => {\n      console.log(\"CHANGING USER DATA\");\n      console.log(res.data);\n      store.dispatch({\n        type: \"RELAY_USER_DATA\",\n        payload: res.data\n      }); // add session storage\n\n      localStorage.setItem(\"relay\", JSON.stringify(store.getState().relay));\n    });\n    setPage(\"main\");\n  };\n\n  const inputHandler = e => {\n    e.preventDefault();\n\n    if (e.target.name.value === \"\") {\n      getPage(\"nils\", \"malmberg\");\n      return;\n    }\n\n    getPage(e.target.name.value, e.target.surName.value);\n  };\n\n  const displayList = () => {\n    var _store$getState, _store$getState$user;\n\n    let retrunArr = [];\n    if (((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$user = _store$getState.user) === null || _store$getState$user === void 0 ? void 0 : _store$getState$user.searchField) === undefined) return;\n    store.getState().user.searchField.forEach((element, index) => {\n      const e = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listEDefault\",\n        onClick: () => selectUser(index),\n        style: {\n          gridRow: `${index + 1}/${index + 2}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nameDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.name + \" \" + element.sur_name\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, _.uniqueId(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ageDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.age\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, _.uniqueId(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genderDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.gender\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, _.uniqueId(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"organization\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.organization\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, _.uniqueId(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, _.uniqueId(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n\n      retrunArr.push(e);\n    });\n    return retrunArr;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landingPageMainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add user to relay pool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleLine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputMainDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"inputContainer\",\n        onSubmit: inputHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDefault nameContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDefault surNameContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"surName\",\n            id: \"surName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDefault OrganizationContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Organization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"organization\",\n            id: \"organization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputButton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Go!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userListMainDiv\",\n      children: [store.getState() ? displayList() : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extraSpace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_c = User_login;\n\nconst useRelay = () => {\n  _s();\n\n  // get course, distance\n  // get info from swimmer\n  // create page to login multiple swimmers\n  // send loged in swimmers to a favorites list and save to cookies\n  // calc every outcome from pool of swimmers\n  // choose the amount of teams generated\n  // generate and display teams\n  // profit\n  const [update, setUpdate] = useState(false);\n  store.subscribe(() => setUpdate(!update));\n  const [page, setPage] = useState(\"main\");\n  const [pool, setPool] = useState(\"25\");\n  const [distance, setDistance] = useState(25);\n  const [stroke, setStroke] = useState(\"fr\");\n  const [calcTeamBtn, setCalcTeamBtn] = useState(false);\n  const [team_list, setTeam_list] = useState(null);\n\n  const remove_user_from_pool = index => {\n    let data = store.getState().relay.data;\n    let info = store.getState().relay.info;\n    data.splice(index, 1);\n    info.splice(index, 1);\n    store.dispatch({\n      //adding user gender\n      type: \"RELAY_REMOVE_USER\",\n      payload: {\n        data: data,\n        info: info\n      }\n    }); // update session storage\n\n    localStorage.setItem(\"relay\", JSON.stringify(store.getState().relay));\n  };\n\n  const displayList = () => {\n    var _store$getState2, _store$getState2$rela;\n\n    let retrunArr = [];\n    if (((_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$rela = _store$getState2.relay) === null || _store$getState2$rela === void 0 ? void 0 : _store$getState2$rela.info) === undefined) return;\n    store.getState().relay.info.forEach((element, index) => {\n      const e = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listEDefault\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info_pool\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nameDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.name + \" \" + element.sur_name\n            }, _.uniqueId(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ageDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.age\n            }, _.uniqueId(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"organization\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.organization\n            }, _.uniqueId(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            remove_user_from_pool(index);\n          },\n          children: \"Remove\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, _.uniqueId(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this);\n\n      retrunArr.push(e);\n    });\n    return retrunArr;\n  };\n\n  const calc_teams = () => {\n    var _store$getState3, _store$getState3$rela, _store$getState3$rela2, _store$getState4, _store$getState4$rela, _store$getState4$rela2;\n\n    setCalcTeamBtn(true);\n    console.log(\"pool: \", pool);\n    console.log(\"distance: \", distance);\n    console.log(\"stroke: \", stroke);\n    if (((_store$getState3 = store.getState()) === null || _store$getState3 === void 0 ? void 0 : (_store$getState3$rela = _store$getState3.relay) === null || _store$getState3$rela === void 0 ? void 0 : (_store$getState3$rela2 = _store$getState3$rela.info[0]) === null || _store$getState3$rela2 === void 0 ? void 0 : _store$getState3$rela2.name) === undefined) return;\n\n    if (((_store$getState4 = store.getState()) === null || _store$getState4 === void 0 ? void 0 : (_store$getState4$rela = _store$getState4.relay) === null || _store$getState4$rela === void 0 ? void 0 : (_store$getState4$rela2 = _store$getState4$rela.data) === null || _store$getState4$rela2 === void 0 ? void 0 : _store$getState4$rela2.length) < 4) {\n      console.log(\"Not enough swimmers for a team\");\n      return;\n    }\n\n    let time_arr = [];\n    let tot_time = moment.duration();\n    store.getState().relay.data.forEach((elm, index) => {\n      var _elm$pool, _elm$pool$stroke, _elm$pool$stroke$dist;\n\n      if (((_elm$pool = elm[pool]) === null || _elm$pool === void 0 ? void 0 : (_elm$pool$stroke = _elm$pool[stroke]) === null || _elm$pool$stroke === void 0 ? void 0 : (_elm$pool$stroke$dist = _elm$pool$stroke[distance]) === null || _elm$pool$stroke$dist === void 0 ? void 0 : _elm$pool$stroke$dist.time) === undefined) {\n        console.log(\"NOT ALL SWIMMERS HAVE SWAM THIS DISTANCE\");\n        tot_time = \"NO TIME\";\n        time_arr.push([index, 0, \"NO TIME\"]);\n        return;\n      }\n\n      const info = store.getState().relay.info[index];\n      console.log(\"Name: \", info.name);\n      console.log(\"Time: \", elm[pool][stroke][distance].time);\n      let time = elm[pool][stroke][distance].time;\n\n      if (moment.isDuration(tot_time)) {\n        tot_time.add(parseInt(time.split(\":\").splice(0)), \"m\").add(parseInt(time.split(\":\").splice(1)), \"s\").add(parseInt(time.split(\".\").splice(1)), \"ms\");\n      }\n\n      time_arr.push([index, moment(time, \"mm:ss.SS\").valueOf(), time]);\n    });\n\n    function sortFunction(a, b) {\n      if (a[1] === b[1]) {\n        return 0;\n      } else {\n        return a[1] < b[1] ? -1 : 1;\n      }\n    }\n\n    time_arr.sort(sortFunction);\n    let returnArr = [];\n    time_arr.forEach(elm => {\n      let index = elm[0];\n      let element = store.getState().relay.info[index];\n\n      const e = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listEDefault\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info_pool\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nameDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.name + \" \" + element.sur_name\n            }, _.uniqueId(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ageDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: elm[2]\n            }, _.uniqueId(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)\n          }, _.uniqueId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stroke_header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: stroke.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, _.uniqueId(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this);\n\n      returnArr.push(e);\n    });\n    let time_str = tot_time;\n\n    if (moment.isDuration(tot_time)) {\n      time_str = `${tot_time.get(\"m\")}:${tot_time.get(\"s\")}.${stringify(tot_time.get(\"ms\")).slice(0, -1)}`;\n\n      if (parseInt(tot_time.get(\"s\")) < 10) {\n        time_str = `${tot_time.get(\"m\")}:0${tot_time.get(\"s\")}.${stringify(tot_time.get(\"ms\")).slice(0, -1)}`;\n      }\n    }\n\n    console.log(time_str);\n    returnArr.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team_info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header\",\n            children: \"Total time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time\",\n            children: time_str\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reset_teams\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCalcTeamBtn(false);\n            },\n            children: \"Reset Teams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this)\n    }, void 0, false));\n    setTeam_list(returnArr);\n  };\n\n  const main_page = () => {\n    var _store$getState5, _store$getState5$rela, _store$getState5$rela2;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relayMainBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course select_default\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"COURSE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setPool(e.target.value),\n            name: \"course\",\n            id: \"course\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"25\",\n              children: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distance select_default\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"DISTANCE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setDistance(e.target.value),\n            name: \"distance\",\n            id: \"distance\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"25\",\n              children: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"100\",\n              children: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"200\",\n              children: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stroke select_default\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"STROKE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setStroke(e.target.value),\n            name: \"stroke\",\n            id: \"stroke\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fr\",\n              children: \"FREE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"br\",\n              children: \"BREST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ry\",\n              children: \"BACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fj\",\n              children: \"FLY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swimmer_pool\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pool_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Swimmer pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setPage(\"user_login\");\n            },\n            children: \"Add +\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), (_store$getState5 = store.getState()) !== null && _store$getState5 !== void 0 && (_store$getState5$rela = _store$getState5.relay) !== null && _store$getState5$rela !== void 0 && (_store$getState5$rela2 = _store$getState5$rela.info[0]) !== null && _store$getState5$rela2 !== void 0 && _store$getState5$rela2.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swimmer_pool_list\",\n          children: store.getState() ? displayList() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu\",\n          children: calcTeamBtn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"TEAMS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line_seperator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              calc_teams();\n            },\n            children: \"Go!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"teams\",\n          children: calcTeamBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"teams_list\",\n            children: team_list\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this);\n  };\n\n  const show_page = () => {\n    switch (page) {\n      case \"main\":\n        return main_page();\n\n      case \"user_login\":\n        return /*#__PURE__*/_jsxDEV(User_login, {\n          setPage: setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  return show_page();\n};\n\n_s(useRelay, \"EVWjxgRcqp/3PeORIuQFgTcym6s=\");\n\nexport default useRelay;\n\nvar _c;\n\n$RefreshReg$(_c, \"User_login\");","map":{"version":3,"sources":["/home/nils/programing/swimcalc/src/relay/relay.jsx"],"names":["store","axios","useState","useEffect","_","moment","User_login","setPage","getPage","name","sur_name","post","then","res","dispatch","type","payload","data","selectUser","index","gender","getState","user","searchField","age","status","id","console","log","localStorage","setItem","JSON","stringify","relay","inputHandler","e","preventDefault","target","value","surName","displayList","retrunArr","undefined","forEach","element","gridRow","uniqueId","organization","push","useRelay","update","setUpdate","subscribe","page","pool","setPool","distance","setDistance","stroke","setStroke","calcTeamBtn","setCalcTeamBtn","team_list","setTeam_list","remove_user_from_pool","info","splice","calc_teams","length","time_arr","tot_time","duration","elm","time","isDuration","add","parseInt","split","valueOf","sortFunction","a","b","sort","returnArr","toUpperCase","time_str","get","slice","main_page","show_page"],"mappings":"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","sourcesContent":["import { store } from \"..\"\nimport axios from \"axios\"\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport _ from \"lodash\"\nimport moment from \"moment\"\n\nconst User_login = ({setPage})=>{\n\n    const getPage = async (name, sur_name) => {\n        await axios.post(\"/tempus/find\", {\n            name,\n            sur_name\n        })\n            .then(res => {\n                store.dispatch({\n                    type: \"USER_SEARCH_FIELDS\",\n                    payload: res.data\n                })\n            })\n    }\n\n    const selectUser = async (index) => {\n\n        await store.dispatch({ //adding user gender\n            type: \"RELAY_USER_INFO\",\n            payload: {\n                gender: store.getState().user.searchField[index].gender,\n                name: store.getState().user.searchField[index].name,\n                sur_name: store.getState().user.searchField[index].sur_name,\n                age: store.getState().user.searchField[index].age,\n                status: store.getState().user.searchField[index].status\n            }\n        })\n\n        axios.post(\"/tempus/selectUser\", {\n            id: store.getState().user.searchField[index].id\n        })\n            .then(res => {\n                console.log(\"CHANGING USER DATA\")\n                console.log(res.data)\n                store.dispatch({\n                    type: \"RELAY_USER_DATA\",\n                    payload: res.data\n                })\n                // add session storage\n                localStorage.setItem(\"relay\", JSON.stringify(store.getState().relay))\n            })\n        \n\n        setPage(\"main\")\n    }\n\n    const inputHandler = (e) => {\n        e.preventDefault()\n        if (e.target.name.value === \"\") {\n            getPage(\"nils\", \"malmberg\")\n            return\n        }\n        getPage(e.target.name.value, e.target.surName.value)\n    }\n\n    const displayList = () => {\n        let retrunArr = []\n        if (store.getState()?.user?.searchField === undefined) return\n        store.getState().user.searchField.forEach((element, index) => {\n            const e = (\n                <div key={_.uniqueId()} className=\"listEDefault\" onClick={() => selectUser(index)} style={{ gridRow: `${index + 1}/${index + 2}` }}>\n                    <div key={_.uniqueId()} className=\"nameDiv\">\n                        <span key={_.uniqueId()}>{element.name + \" \" + element.sur_name}</span>\n                    </div>\n                    <div key={_.uniqueId()} className=\"ageDiv\">\n                        <span key={_.uniqueId()}>{element.age}</span>\n                    </div>\n                    <div key={_.uniqueId()} className=\"genderDiv\">\n                        <span key={_.uniqueId()}>{element.gender}</span>\n                    </div>\n                    <div key={_.uniqueId()} className=\"organization\">\n                        <span key={_.uniqueId()}>{element.organization}</span>\n                    </div>\n                </div>\n            )\n            retrunArr.push(e)\n        });\n        return retrunArr\n    }\n\n\n    return (\n        <div className=\"landingPageMainDiv\">\n            <div className=\"titleDiv\">\n                {/* <span onClick={() => getPage()}>Enter your name to login</span>\n                <span onClick={() => selectUser(\"AI3504\")}>CLICK ME!</span> */}\n                {/* <span onClick={()=> selectUser(\"AI6711\")}>CLICK ME!</span> */}\n                <span>Add user to relay pool</span>\n                <div className=\"titleLine\" />\n            </div>\n            <div className=\"inputMainDiv\">\n                <form className=\"inputContainer\" onSubmit={inputHandler}>\n                    <div className=\"inputDefault nameContainer\">\n                        <span>Name</span>\n                        <input type=\"text\" name=\"name\" id=\"name\" />\n                    </div>\n                    <div className=\"inputDefault surNameContainer\">\n                        <span>Surname</span>\n                        <input type=\"text\" name=\"surName\" id=\"surName\" />\n                    </div>\n                    <div className=\"inputDefault OrganizationContainer\">\n                        <span>Organization</span>\n                        <input type=\"text\" name=\"organization\" id=\"organization\" />\n                    </div>\n                    <div className=\"inputButton\">\n                        <button type=\"submit\">Go!</button>\n                    </div>\n                </form>\n            </div>\n            <div className=\"userListMainDiv\">\n                {store.getState() ?\n                    displayList() :\n                    null\n                }\n                <div className=\"extraSpace\" />\n            </div>\n        </div>\n    )\n}\n\nconst useRelay = ()=>{\n\n    // get course, distance\n\n    // get info from swimmer\n\n        // create page to login multiple swimmers\n        // send loged in swimmers to a favorites list and save to cookies\n\n    // calc every outcome from pool of swimmers\n    \n    // choose the amount of teams generated\n\n    // generate and display teams\n\n    // profit\n\n    const [update, setUpdate] = useState(false)\n    store.subscribe(() => setUpdate(!update))\n\n    const [page, setPage] = useState(\"main\")\n    const [pool, setPool] = useState(\"25\")\n    const [distance, setDistance] = useState(25)\n    const [stroke, setStroke] = useState(\"fr\")\n    const [calcTeamBtn, setCalcTeamBtn] = useState(false)\n    const [team_list, setTeam_list] = useState(null)\n\n    const remove_user_from_pool= (index)=>{\n        \n        let data = store.getState().relay.data\n        let info = store.getState().relay.info\n\n        data.splice(index, 1)\n        info.splice(index, 1)\n\n        store.dispatch({ //adding user gender\n            type: \"RELAY_REMOVE_USER\",\n            payload: {\n                data: data,\n                info: info\n            }\n        })\n        // update session storage\n        localStorage.setItem(\"relay\", JSON.stringify(store.getState().relay))\n    }\n\n    const displayList = () => {\n        let retrunArr = []\n        if (store.getState()?.relay?.info === undefined) return\n        store.getState().relay.info.forEach((element, index) => {\n            const e = (\n                <div key={_.uniqueId()} className=\"listEDefault\">\n                    <div className=\"info_pool\">\n                        <div key={_.uniqueId()} className=\"nameDiv\">\n                            <span key={_.uniqueId()}>{element.name + \" \" + element.sur_name}</span>\n                        </div>\n                        <div key={_.uniqueId()} className=\"ageDiv\">\n                            <span key={_.uniqueId()}>{element.age}</span>\n                        </div>\n                        <div key={_.uniqueId()} className=\"organization\">\n                            <span key={_.uniqueId()}>{element.organization}</span>\n                        </div>\n                    </div>\n                    <button key={index} onClick={()=>{remove_user_from_pool(index)}}>Remove</button>\n                </div>\n            )\n            retrunArr.push(e)\n        });\n        return retrunArr\n    }\n\n    const calc_teams = ()=>{\n        setCalcTeamBtn(true)\n\n        console.log(\"pool: \", pool)\n        console.log(\"distance: \", distance)\n        console.log(\"stroke: \", stroke)\n\n\n        if (store.getState()?.relay?.info[0]?.name === undefined) return \n\n        if (store.getState()?.relay?.data?.length < 4){\n            console.log(\"Not enough swimmers for a team\")\n            return\n        }\n\n        let time_arr = []\n        let tot_time = moment.duration()\n\n        store.getState().relay.data.forEach((elm, index) =>{\n            if (elm[pool]?.[stroke]?.[distance]?.time === undefined){\n                console.log(\"NOT ALL SWIMMERS HAVE SWAM THIS DISTANCE\")\n                tot_time = \"NO TIME\"\n                time_arr.push([\n                    index,\n                    0,\n                    \"NO TIME\",\n                ])\n                return\n            }\n            const info = store.getState().relay.info[index]\n            console.log(\"Name: \", info.name)\n            console.log(\"Time: \", elm[pool][stroke][distance].time)\n\n            let time = elm[pool][stroke][distance].time\n\n            if (moment.isDuration(tot_time)){\n                tot_time.\n                    add(parseInt(time.split(\":\").splice(0)), \"m\").\n                    add(parseInt(time.split(\":\").splice(1)), \"s\").\n                    add(parseInt(time.split(\".\").splice(1)), \"ms\")\n            }\n\n            time_arr.push([\n                index,\n                moment(time, \"mm:ss.SS\").valueOf(),\n                time,\n            ])\n        })\n\n\n        function sortFunction(a, b) {\n            if (a[1] === b[1]) {\n                return 0;\n            }\n            else {\n                return (a[1] < b[1]) ? -1 : 1;\n            }\n        }\n\n        time_arr.sort(sortFunction)\n\n        let returnArr = []\n\n        time_arr.forEach((elm)=>{\n            let index = elm[0]\n            let element = store.getState().relay.info[index]\n            const e = (\n                <div key={_.uniqueId()} className=\"listEDefault\">\n                    <div className=\"info_pool\">\n                        <div key={_.uniqueId()} className=\"nameDiv\">\n                            <span key={_.uniqueId()}>{element.name + \" \" + element.sur_name}</span>\n                        </div>\n                        <div key={_.uniqueId()} className=\"ageDiv\">\n                            <span key={_.uniqueId()}>{elm[2]}</span>\n                        </div>\n                    </div>\n                    <div className=\"stroke_header\">\n                        <span>{stroke.toUpperCase()}</span>\n                    </div>\n                </div>\n            )\n            returnArr.push(e)\n\n        })\n\n        let time_str = tot_time\n        if (moment.isDuration(tot_time)){\n            time_str = `${tot_time.get(\"m\")}:${tot_time.get(\"s\")}.${stringify(tot_time.get(\"ms\")).slice(0, -1)}`\n            if (parseInt(tot_time.get(\"s\")) < 10){\n                time_str = `${tot_time.get(\"m\")}:0${tot_time.get(\"s\")}.${stringify(tot_time.get(\"ms\")).slice(0, -1)}`\n            }\n        }\n\n\n        console.log(time_str)\n\n        returnArr.push(\n            <>\n            <div className=\"team_info\">\n                <div className=\"result_menu\">\n                    <span className=\"header\">Total time</span>\n                    <span className=\"time\">{time_str}</span>\n                </div>\n                <div className=\"reset_teams\">\n                    <button onClick={()=>{setCalcTeamBtn(false)}}>Reset Teams</button>\n                </div>\n            </div>\n            </>\n        )\n\n        setTeam_list(returnArr)\n\n    }\n\n    const main_page = ()=>{\n        return (\n            <div className=\"relayMainBody\">\n                <div className=\"info\">\n                    <div className=\"course select_default\">\n                        <span>COURSE:</span>\n                        <select onChange={(e) => setPool(e.target.value)} name=\"course\" id=\"course\">\n                            <option value=\"25\">25</option>\n                            <option value=\"50\">50</option>\n                        </select>\n                    </div>\n                    <div className=\"distance select_default\">\n                        <span>DISTANCE</span>\n                        <select onChange={(e) => setDistance(e.target.value)} name=\"distance\" id=\"distance\">\n                            <option value=\"25\">25</option>\n                            <option value=\"50\">50</option>\n                            <option value=\"100\">100</option>\n                            <option value=\"200\">200</option>\n                        </select>\n                    </div>\n                    <div className=\"stroke select_default\">\n                        <span>STROKE</span>\n                        <select onChange={(e) => setStroke(e.target.value)} name=\"stroke\" id=\"stroke\">\n                            <option value=\"fr\">FREE</option>\n                            <option value=\"br\">BREST</option>\n                            <option value=\"ry\">BACK</option>\n                            <option value=\"fj\">FLY</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"swimmer_pool\">\n                    <div className=\"pool_info\">\n                        <span>Swimmer pool</span>\n                        <button onClick={()=>{setPage(\"user_login\")}}>Add +</button>\n                    </div>\n                    {\n                        store.getState()?.relay?.info[0]?.name ? \n                        <div className=\"swimmer_pool_list\">\n                            {store.getState() ?\n                                displayList() :\n                                null\n                            }\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"result_div\">\n                    <div className=\"menu\">\n                        {\n                            calcTeamBtn ? \n                            <>\n                                <span>TEAMS</span>\n                                <div className=\"line_seperator\"/>\n                            </>\n                            :\n                            <button onClick={()=>{calc_teams()}}>Go!</button>\n                        }\n                    </div>\n                    <div className=\"teams\">\n                        {\n                            calcTeamBtn ? \n                            <div className=\"teams_list\">\n                                    {team_list}\n                            </div>\n                            :\n                            null\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    const show_page = ()=>{\n        switch(page){\n            case \"main\":\n                return main_page()\n            case \"user_login\":\n                return <User_login setPage={setPage}/>\n        }\n    }\n\n\n    return show_page()\n\n} \n\nexport default useRelay"]},"metadata":{},"sourceType":"module"}