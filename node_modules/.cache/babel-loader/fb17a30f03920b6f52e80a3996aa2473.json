{"ast":null,"code":"var _jsxFileName = \"/home/nils/programing/swimcalc/src/calculator/calc.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useCalc = () => {\n  _s();\n  const [baseTimeMin, setBaseTimeMin] = useState(null);\n  const [baseTimeSec, setBaseTimeSec] = useState(null);\n  React.useEffect(() => {\n    // console.log(\"baseMin: \", baseTimeMin)\n    // console.log(\"baseSec: \", baseTimeSec)\n  });\n  const distance = () => {\n    const distanceArray = [\"50\", \"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"900\", \"1000\", \"1100\", \"1200\", \"1300\", \"1400\", \"1500\"];\n    const returnArray = [];\n    distanceArray.forEach(element => {\n      let position;\n      switch (element) {\n        case \"50\":\n          position = 2;\n          break;\n        case \"100\":\n          position = 3;\n          break;\n        case \"200\":\n          position = 4;\n          break;\n        case \"300\":\n          position = 5;\n          break;\n        case \"400\":\n          position = 6;\n          break;\n        case \"500\":\n          position = 7;\n          break;\n        case \"600\":\n          position = 8;\n          break;\n        case \"700\":\n          position = 9;\n          break;\n        case \"800\":\n          position = 10;\n          break;\n        case \"900\":\n          position = 11;\n          break;\n        case \"1000\":\n          position = 12;\n          break;\n        case \"1100\":\n          position = 13;\n          break;\n        case \"1200\":\n          position = 14;\n          break;\n        case \"1300\":\n          position = 15;\n          break;\n        case \"1400\":\n          position = 16;\n          break;\n        case \"1500\":\n          position = 17;\n          break;\n        default:\n          position = 18;\n          break;\n      }\n      returnArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridColumn: \"1 / 2\",\n          gridRow: `${position + 1} / ${position + 2}`\n        },\n        className: \"colorDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: element\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, `key${element}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this));\n    });\n    return returnArray;\n  };\n  const calculator = e => {\n    // if (e.target.value.toString().indexOf(\".\") > -1) {\n    //     console.log(\"not a number\")\n    //     setBaseTimeMin(null)\n    //     setBaseTimeSec(null)\n    //     return\n    // }\n    if (e.target.value.toString().charAt(0) === \"0\") {\n      e.target.value = e.target.value.toString().replace(\"0\", \"\");\n    }\n    if (baseTimeMin === null && baseTimeSec === null) {\n      setBaseTimeMin(0);\n      setBaseTimeSec(0);\n    }\n    if (e.target.name === \"min\") {\n      // console.log(\"minutes: \", e.target.value)\n    }\n    if (e.target.name === \"sec\") {\n      // console.log(\"seconds: \", e.target.value)\n    }\n\n    // console.log(e.target.id)\n\n    let convert = e.target.id * 2; // value for converting time to 50 meter base\n    if (convert === 0) {\n      // if ID === 0, the division will be undefined, and so need to be manually changed\n      convert = 1;\n    }\n    if (e.target.name === \"min\") {\n      setBaseTimeMin(e.target.value / convert); // deviding with convert to base time in 50s\n    } else if (e.target.name === \"sec\") {\n      setBaseTimeSec(e.target.value / convert); // deviding with convert to base time in 50s\n    }\n  };\n\n  const time = () => {\n    const returnArray = [];\n    for (let i = 0; i < 16; i++) {\n      let min;\n      let sec;\n      let convert = i * 2; // se in function above why this is \n      if (convert === 0) {\n        convert = 1;\n      }\n      min = baseTimeMin * convert;\n      sec = baseTimeSec * convert;\n      const timeCalc = duration => {\n        if (duration >= 60) {\n          // if the duration is more than one minute\n          let min = ~~(duration / 60);\n          let sec = Number.parseFloat(duration % 60).toFixed(2);\n          //let sec = ~~(duration % 60)\n          console.log(\"SEC: \", sec);\n          console.log(\"MIN: \", min);\n          return [sec, min];\n        }\n        return [duration, 0];\n      };\n      let duration = min * 60 + sec;\n      let [secCalc, minCalc] = timeCalc(duration);\n\n      // console.log(\"CALC: \", secCalc, \" \", minCalc)\n      returnArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridColumn: \"2 / 3\",\n          gridRow: `${i + 3} / ${i + 4}`\n        },\n        className: \"colorDiv timeInputDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: baseTimeMin !== null ? minCalc : \"\",\n          onInput: calculator,\n          id: i,\n          name: \"min\",\n          type: \"number\",\n          placeholder: \"min\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: baseTimeSec !== null ? secCalc : \"\",\n          onInput: calculator,\n          id: i,\n          name: \"sec\",\n          type: \"number\",\n          placeholder: \"sec\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, `key${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this));\n    }\n    return returnArray;\n  };\n  const resetValues = () => {\n    setBaseTimeMin(null);\n    setBaseTimeSec(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tabellMain\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetButtonDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetValues,\n          children: \"RESET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colorDiv distanceTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"DISTANCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), distance(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colorDiv TimeTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"TIME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), time()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n_s(useCalc, \"TrYD/+B4J1kFfSDKQvoennW1pSI=\");\nexport default useCalc;","map":{"version":3,"names":["React","useState","useCalc","baseTimeMin","setBaseTimeMin","baseTimeSec","setBaseTimeSec","useEffect","distance","distanceArray","returnArray","forEach","element","position","push","gridColumn","gridRow","calculator","e","target","value","toString","charAt","replace","name","convert","id","time","i","min","sec","timeCalc","duration","Number","parseFloat","toFixed","console","log","secCalc","minCalc","resetValues"],"sources":["/home/nils/programing/swimcalc/src/calculator/calc.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst useCalc = () => {\n    const [baseTimeMin, setBaseTimeMin] = useState(null)\n    const [baseTimeSec, setBaseTimeSec] = useState(null)\n\n\n    React.useEffect(() => {\n        // console.log(\"baseMin: \", baseTimeMin)\n        // console.log(\"baseSec: \", baseTimeSec)\n    })\n\n\n    const distance = () => {\n        const distanceArray = [\"50\", \"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"900\", \"1000\", \"1100\", \"1200\", \"1300\", \"1400\", \"1500\"]\n        const returnArray = []\n        distanceArray.forEach((element) => {\n            let position\n            switch (element) {\n                case \"50\":\n                    position = 2\n                    break;\n                case \"100\":\n                    position = 3\n                    break;\n                case \"200\":\n                    position = 4\n                    break;\n                case \"300\":\n                    position = 5\n                    break;\n                case \"400\":\n                    position = 6\n                    break;\n                case \"500\":\n                    position = 7\n                    break;\n                case \"600\":\n                    position = 8\n                    break;\n                case \"700\":\n                    position = 9\n                    break;\n                case \"800\":\n                    position = 10\n                    break;\n                case \"900\":\n                    position = 11\n                    break;\n                case \"1000\":\n                    position = 12\n                    break;\n                case \"1100\":\n                    position = 13\n                    break;\n                case \"1200\":\n                    position = 14\n                    break;\n                case \"1300\":\n                    position = 15\n                    break;\n                case \"1400\":\n                    position = 16\n                    break;\n                case \"1500\":\n                    position = 17\n                    break;\n                default:\n                    position = 18\n                    break;\n            }\n            returnArray.push(\n                <div key={`key${element}`} style={{\n                    gridColumn: \"1 / 2\",\n                    gridRow: `${position + 1} / ${position + 2}`\n                }} className=\"colorDiv\">\n                    <span>{element}</span>\n                </div>\n            )\n        })\n        return returnArray\n    }\n\n    const calculator = (e) => {\n        // if (e.target.value.toString().indexOf(\".\") > -1) {\n        //     console.log(\"not a number\")\n        //     setBaseTimeMin(null)\n        //     setBaseTimeSec(null)\n        //     return\n        // }\n        if (e.target.value.toString().charAt(0) === \"0\") {\n            e.target.value = e.target.value.toString().replace(\"0\", \"\")\n        }\n        if (baseTimeMin === null && baseTimeSec === null) {\n            setBaseTimeMin(0)\n            setBaseTimeSec(0)\n        }\n        if (e.target.name === \"min\") {\n            // console.log(\"minutes: \", e.target.value)\n        }\n        if (e.target.name === \"sec\") {\n            // console.log(\"seconds: \", e.target.value)\n        }\n\n        // console.log(e.target.id)\n\n        let convert = e.target.id * 2 // value for converting time to 50 meter base\n        if (convert === 0) { // if ID === 0, the division will be undefined, and so need to be manually changed\n            convert = 1\n        }\n\n        if (e.target.name === \"min\") {\n            setBaseTimeMin(e.target.value / convert) // deviding with convert to base time in 50s\n        } else if (e.target.name === \"sec\") {\n            setBaseTimeSec(e.target.value / convert) // deviding with convert to base time in 50s\n        }\n    }\n\n    const time = () => {\n        const returnArray = []\n        for (let i = 0; i < 16; i++) {\n            let min\n            let sec\n            let convert = i * 2 // se in function above why this is \n            if (convert === 0) {\n                convert = 1\n            }\n            min = baseTimeMin * convert\n            sec = baseTimeSec * convert\n\n            const timeCalc = (duration) => {\n                if (duration >= 60) { // if the duration is more than one minute\n                    let min = ~~(duration / 60)\n                    let sec = Number.parseFloat(duration % 60).toFixed(2)\n                    //let sec = ~~(duration % 60)\n                    console.log(\"SEC: \", sec)\n                    console.log(\"MIN: \", min)\n                    return [sec, min]\n                }\n                return [duration, 0]\n            }\n            let duration = (min * 60) + sec\n            let [secCalc, minCalc] = timeCalc(duration)\n\n            // console.log(\"CALC: \", secCalc, \" \", minCalc)\n            returnArray.push(\n                <div key={`key${i}`} style={{\n                    gridColumn: \"2 / 3\",\n                    gridRow: `${i + 3} / ${i + 4}`\n                }} className=\"colorDiv timeInputDiv\">\n                    <input value={baseTimeMin !== null ? minCalc : \"\"} onInput={calculator} id={i} name=\"min\" type=\"number\" placeholder=\"min\" />\n                    <span>:</span>\n                    <input value={baseTimeSec !== null ? secCalc : \"\"} onInput={calculator} id={i} name=\"sec\" type=\"number\" placeholder=\"sec\" />\n                </div>\n            )\n        }\n        return returnArray\n    }\n\n    const resetValues = () => {\n        setBaseTimeMin(null)\n        setBaseTimeSec(null)\n    }\n\n    return (\n        <div className=\"tabellMain\">\n            <div className=\"container\">\n                <div className=\"resetButtonDiv\">\n                    <button onClick={resetValues}>RESET</button>\n                </div>\n                <div className=\"colorDiv distanceTitle\">\n                    <span>DISTANCE</span>\n                </div>\n                {distance()}\n                <div className=\"colorDiv TimeTitle\">\n                    <span>TIME</span>\n                </div>\n                {time()}\n            </div>\n        </div>\n    )\n}\n\nexport default useCalc"],"mappings":"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"},"metadata":{},"sourceType":"module"}